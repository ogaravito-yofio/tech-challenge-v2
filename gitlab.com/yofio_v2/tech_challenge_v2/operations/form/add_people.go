// Code generated by go-swagger; DO NOT EDIT.

package form

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// AddPeopleHandlerFunc turns a function with the right signature into a add people handler
type AddPeopleHandlerFunc func(AddPeopleParams) middleware.Responder

// Handle executing the request and returning a response
func (fn AddPeopleHandlerFunc) Handle(params AddPeopleParams) middleware.Responder {
	return fn(params)
}

// AddPeopleHandler interface for that can handle valid add people params
type AddPeopleHandler interface {
	Handle(AddPeopleParams) middleware.Responder
}

// NewAddPeople creates a new http.Handler for the add people operation
func NewAddPeople(ctx *middleware.Context, handler AddPeopleHandler) *AddPeople {
	return &AddPeople{Context: ctx, Handler: handler}
}

/*AddPeople swagger:route POST /registration form addPeople

Add a new registration to the database

*/
type AddPeople struct {
	Context *middleware.Context
	Handler AddPeopleHandler
}

func (o *AddPeople) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewAddPeopleParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
